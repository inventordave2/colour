### Explanation
- **Cross-Platform Window Creation**:
  - Uses **SDL2** to create a window and renderer, which works on Windows, Linux, macOS, etc.
  - Window size is configurable (default 800x600).
- **COM Integration (Windows Only)**:
  - On Windows, the program retrieves the native `HWND` from the SDL window using `SDL_GetWindowWMInfo`.
  - The `attach_com_object` function initializes COM, creates an instance of the specified COM object (e.g., `Shell.Explorer` for a WebBrowser control), and embeds it as a child window at the specified position and size.
  - The example uses the WebBrowser control, but you can pass any valid ProgID (e.g., `Word.Document` for a Word document).
- **Non-Windows Fallback**:
  - On non-Windows platforms, `attach_com_object` logs a message indicating COM is unsupported and renders a placeholder rectangle using SDL.
  - You can extend the fallback with SDL_ttf for text or other rendering if needed.
- **Helper Functions**:
  - `create_window`: Initializes SDL and creates a window.
  - `destroy_window`: Cleans up SDL and COM resources.
  - `attach_com_object`: Embeds a COM object (Windows) or logs a fallback (non-Windows).
  - `render_fallback`: Draws a placeholder for non-Windows platforms.
  - `run_event_loop`: Handles events and rendering.
- **Limitations**:
  - COM is Windows-only, so non-Windows platforms get a basic placeholder. For true cross-platform GUI with embedded objects, consider alternatives like Qt or embedding a browser engine (e.g., CEF).
  - The WebBrowser control requires Internet Explorer on the system.
  - Simplified COM handling; real applications may need a proper `IOleClientSite` implementation for full functionality.
  - SDL2 must be linked, and Windows requires `ole32` and `oleaut32` libraries.
- **Compilation**:
  - Windows: `gcc -o gui_com gui_com.c -lSDL2 -lole32 -loleaut32`
  - Linux/macOS: `gcc -o gui_com gui_com.c -lSDL2`
  - Ensure SDL2 is installed and the Windows SDK is available for COM.

### Usage
- Run the program to create a window.
- On Windows, it attempts to embed a WebBrowser control at (50,50) with size 700x500.
- On non-Windows, it renders a gray rectangle as a placeholder.
- Close the window to exit.

If you need a specific COM object, additional GUI features, or a different cross-platform framework (e.g., Qt, wxWidgets), let me know, and I can adapt the code!

Compile with: gcc -o gui_com gui_com.c -lSDL2 (adjust for Windows with -lole32 -loleaut32).

